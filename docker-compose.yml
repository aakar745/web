version: '3.8'

services:
  # Redis for job queue and caching
  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  # MongoDB database
  mongo:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    restart: always
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Main application - backend API and static frontend
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb://mongo:27017/webtools
      - FRONTEND_URL=http://localhost
      - JWT_SECRET=${JWT_SECRET:-your-production-jwt-secret-key-should-be-long-and-secure}
      - JWT_EXPIRE=7d
    ports:
      - "80:5000"
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Worker process for background image processing
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: node worker.js
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGODB_URI=mongodb://mongo:27017/webtools
      - JWT_SECRET=${JWT_SECRET:-your-production-jwt-secret-key-should-be-long-and-secure}
      - JWT_EXPIRE=7d
      - WORKER_CONCURRENCY=2
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_healthy
      mongo:
        condition: service_healthy
    restart: always

volumes:
  redis_data:
  mongo_data:
  uploads:
  logs: 